plugins {
    id 'java'
    id "com.github.spotbugs" version "$spotbugspluginVersion"
    id "info.solidsoft.pitest" version "1.7.4"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    maven{url 'https://maven.aliyun.com/repository/public'}
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    spotbugsPlugins "com.h3xstream.findsecbugs:findsecbugs-plugin:$findsecbugspluginVersion"
}

test {
    useJUnitPlatform()
}

apply from: "$rootDir/gradle/config/scripts/style.gradle"
apply from: "$rootDir/gradle/config/scripts/coverage.gradle"
coverage.excludePackages = [
]
coverage.excludeClasses = [
]
style.excludePackages = [
]
style.excludeClasses = [
]

spotbugs {
    toolVersion = "$spotbugsVersion"
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    effort = 'default'
    reportLevel = 'low'
    reportsDir = file("$buildDir/reports/spotbugs")
    maxHeapSize = '2g'
    extraArgs = [ '-nested:false' ]
    jvmArgs = [ '-Duser.language=en' ]
}

spotbugsTest {
    reports {
        html {
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

spotbugsMain {
    reports {
        html {
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

pitest {
    targetClasses = ['mimic.*']
    threads = 4
    outputFormats = ['HTML']
    timestampedReports = true
    junit5PluginVersion = '0.15'
}
